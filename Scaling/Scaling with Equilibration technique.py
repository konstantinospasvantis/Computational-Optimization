# -*- coding: utf-8 -*-
"""Week4_Samaras.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kEmFNlWVoDdifBXn-QASh1D2ZG3fziMo
"""

import numpy as np
np.set_printoptions(threshold=np.inf)

f=open('afiro.mps' ,'r')

s=f.readline()
s=f.readline()
s=f.readline()

eq_type=dict()
m=0
while s[:7] != 'COLUMNS':
  if s[1:3].strip() in ['E','L','G']:
    rowlabel=s[4:12].strip()
    eq_type[rowlabel]=s[1:3].strip()
    m=m+1
  elif s[1:3].strip() == 'N' :
    name_obj=s[4:12].strip()
  s=f.readline()



s=f.readline()
arith={list(eq_type.keys())[i]:list(range(0,m+1))[i] for i in range(m)}
A=np.zeros(m)
a=np.zeros(m)
n=0
dict_obj=dict()
metav={s[4:12].strip():0}


while s[:3]!= 'RHS' :
    if s[4:13].strip() in metav :
        if s[14:22].strip() in arith :
            a[arith[s[14:22].strip()]]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == name_obj :
                dict_obj[s[4:12].strip()]=float(s[49:61].strip())
            elif s[39:47].strip()=='':
                pass
        elif s[14:22].strip() == name_obj :
            dict_obj[s[4:12].strip()]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == '' :
                pass


    elif s[4:13].strip() not in metav :
        n=n+1
        A=np.vstack([A,a])
        a=np.zeros(m)
        metav[s[4:12].strip()]=n
        if s[14:22].strip() in arith :
            a[arith[s[14:22].strip()]]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == name_obj :
                dict_obj[s[4:12].strip()]=float(s[49:61].strip())
            elif s[39:47].strip()=='':
                pass
        elif s[14:22].strip() == name_obj :
            dict_obj[s[4:12].strip()]=float(s[24:38].strip())
            if s[39:49].strip() in arith :
                a[arith[s[39:49].strip()]]=float(s[49:61].strip())
            elif s[39:49].strip() == '' :
                pass

    s=f.readline()

n=n+1
A=np.vstack([A,a])
A=np.delete(A,0,axis=0)
A=np.transpose(A)



s=f.readline()
b=np.zeros(m)
while s[:6] != 'ENDATA' :
    if s[14:23].strip() in arith :
        b[arith[s[14:22].strip()]]=float(s[24:36].strip())
        if s[39:47].strip() in arith :
            b[arith[s[39:47].strip()]]=float(s[49:61])
        elif s[39:47].strip() == '' :
            pass
    s=f.readline()

b=np.asarray(b)
c=np.zeros(n)
for i in dict_obj :
    c[metav[i]]=dict_obj[i]

Eqin=np.zeros(m)
for i in arith :
    if eq_type[i] == 'E' :
        Eqin[arith[i]]= 0
    elif eq_type[i] == 'G' :
        Eqin[arith[i]] = 1
    elif eq_type[i] == 'L' :
        Eqin[arith[i]] = -1
Eqin = np.asarray(Eqin)

c=np.asarray(c)
c=np.transpose(c)
f.close()

colmulti=np.zeros(A.shape[1])    #list holding the numbers that we will multiply each column with
rowmulti=np.zeros(A.shape[0])    #list holding the numbers that we will multiply each row with
set1=set()                       #set of indices of these rows that have the maximum absolute value
set2=set(range(A.shape[0]))      #set of every row
for j in range(A.shape[1]):
  colmulti[j]=np.divide(1,np.max(abs(A[:,j])))   
  A[:,j]=np.dot(A[:,j],colmulti[j])
  find_row=np.where(abs(A[:,j])==np.max(abs(A[:,j])))    #finding the row indices of the maximum values
  find_row_list=find_row[0].tolist()                        
  set_find_row=set(find_row_list)
  set1.update(set_find_row)
  c[j]=np.dot(c[j],colmulti[j])
for i in set2.difference(set1):
  rowmulti[i]=np.divide(1,np.max(abs(A[i])))
  A[i]=np.dot(A[i],rowmulti[i])
  b[i]=np.dot(b[i],rowmulti[i])
  
print(A)
print(b)
print(c)