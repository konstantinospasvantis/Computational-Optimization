# -*- coding: utf-8 -*-
"""Week3_Samaras.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1psSCPH_J1uOX-dzSy65-1Osjhl_0MAf7
"""

import pandas as pd
import numpy as np


np.set_printoptions(threshold=np.inf)

f=open('sc205-2r-8.mps' ,'r')

s=f.readline()
s=f.readline()
s=f.readline()
#ROWS ta vazoyme se dict
eq_type=dict()
m=0
while s[:7] != 'COLUMNS':
  if s[1:3].strip() in ['E','L','G']:
    rowlabel=s[4:12].strip()
    eq_type[rowlabel]=s[1:3].strip()
    m=m+1
  elif s[1:3].strip() == 'N' :
    name_obj=s[4:12].strip()
  s=f.readline()


#EXOUME VALEI TIS GRAMMES ME TA E L G SE ENA DICT
s=f.readline()
arith={list(eq_type.keys())[i]:list(range(0,m+1))[i] for i in range(m)}
A=np.zeros(m)
a=np.zeros(m)
n=0
dict_obj=dict()
metav={s[4:12].strip():0}


while s[:3]!= 'RHS' :
    if s[4:13].strip() in metav :
        if s[14:22].strip() in arith :
            a[arith[s[14:22].strip()]]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == name_obj :
                dict_obj[s[4:12].strip()]=float(s[49:61].strip())
            elif s[39:47].strip()=='':
                pass
        elif s[14:22].strip() == name_obj :
            dict_obj[s[4:12].strip()]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == '' :
                pass


    elif s[4:13].strip() not in metav :
        n=n+1
        A=np.vstack([A,a])
        a=np.zeros(m)
        metav[s[4:12].strip()]=n
        if s[14:22].strip() in arith :
            a[arith[s[14:22].strip()]]=float(s[24:36].strip())
            if s[39:47].strip() in arith :
                a[arith[s[39:47].strip()]]=float(s[49:61].strip())
            elif s[39:47].strip() == name_obj :
                dict_obj[s[4:12].strip()]=float(s[49:61].strip())
            elif s[39:47].strip()=='':
                pass
        elif s[14:22].strip() == name_obj :
            dict_obj[s[4:12].strip()]=float(s[24:38].strip())
            if s[39:49].strip() in arith :
                a[arith[s[39:49].strip()]]=float(s[49:61].strip())
            elif s[39:49].strip() == '' :
                pass

    s=f.readline()

n=n+1
A=np.vstack([A,a])
A=np.delete(A,0,axis=0)
A=np.transpose(A)

#Exw teleiwsei me ton A , exw vrei diastaseis

s=f.readline()
b=np.zeros(m)
while s[:6] != 'ENDATA' :
    if s[14:23].strip() in arith :
        b[arith[s[14:22].strip()]]=float(s[24:36].strip())
        if s[39:47].strip() in arith :
            b[arith[s[39:47].strip()]]=float(s[49:61])
        elif s[39:47].strip() == '' :
            pass
    s=f.readline()

b=np.asarray(b)
c=np.zeros(n)
for i in dict_obj :
    c[metav[i]]=dict_obj[i]

Eqin=np.zeros(m)
for i in arith :
    if eq_type[i] == 'E' :
        Eqin[arith[i]]= 0
    elif eq_type[i] == 'G' :
        Eqin[arith[i]] = 1
    elif eq_type[i] == 'L' :
        Eqin[arith[i]] = -1
Eqin = np.asarray(Eqin)


c=np.asarray(c)
c=np.transpose(c)
f.close()

print(A.shape)
print(np.count_nonzero(A[12]))
print(Eqin[12])
print(np.count_nonzero(A))

#We choose our k
k=5  
while k!=1:
  i=A.shape[0]-1
  while i >-1:
    if np.count_nonzero(A[i])==k and Eqin[i]==0:      #To eliminate an equality constrain we must ensure that our Eqin = 0 
      for j in range(A.shape[1]-1,-1,-1):             #implemantation of the algorithm
        if A[i,j]!=0:
          b[i]=np.divide(b[i],A[i,j])
          A[i]=np.divide(A[i],A[i,j])
          Eqin[i]=-1
          for t in range(A.shape[0]-1,-1,-1):
            if t==i:
              pass
            else:
              if A[t,j]!=0:
                b[t]=b[t]-np.dot(A[t,j],b[i])
                A[t]=A[t]-np.dot(A[t,j],A[i])
          if c[j]!=0:
            c_0=c_0+np.dot(c[j],b[i])
            c=c-np.dot(c[j],A[i])
          A=np.delete(A,j,1)
          c=np.delete(c,j,0)
          i=A.shape[0]
          break
    i=i-1
  k=k-1
if k==1:                                                         #and now we check if we have a singleton equality constraint
  i=A.shape[0]-1
  while i>-1:
    if np.count_nonzero(A[i])==1 and Eqin[i]==0:
      for j in range(A.shape[1]-1,-1,-1):
        if A[i][j]!=0:
          metav=b[i]/A[i][j]
          if metav<=0:
            print('Error, problem is unfeasable')
            break
          else :
            if c[j]!=0:
              c_0=c_0 - np.dot(c[j],(b[i]/A[i,j]))
            b=b-np.dot(metav,A[:,j])
            A=np.delete(A,i,0)
            A=np.delete(A,j,1)
            b=np.delete(b,i,0)
            Eqin=np.delete(Eqin,i,0)
            c=np.delete(c,j,0)
            i=A.shape[0]
            break
    i-=1  






print(A.shape)
print(np.count_nonzero(A))